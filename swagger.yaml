swagger: "2.0"
info:
  description: Google Cloud CLI
  title: gcp
  version: "1.0"
  x-direktiv-meta:
    container: gcr.io/direktiv/apps/gcp
    maintainer: |-
      [direktiv.io](https://www.direktiv.io) 
    issues: https://github.com/direktiv-apps/gcp/issues
    url: https://github.com/direktiv-apps/gcp  
    categories:
    - cloud
    - build
    license: |-
      [Apache-2.0](https://www.apache.org/licenses/LICENSE-2.0)
    long-description: >-
      This function provides Google Cloud's command line interface version 395.0.0. It has `gscloud` and `gsutil` installed. 
      Please make sure to append `--format=json` if a JSON response of a command is required. 
consumes:
- application/json
produces:
- application/json
schemes:
- http
paths:
  /: 
    delete:
      parameters:
        - name: Direktiv-ActionID
          in: header
          type: string
          description: |
            On cancel Direktiv sends a DELETE request to
            the action with id in the header
      x-direktiv:
        cancel: echo 'cancel {{ .DirektivActionID }}'
      responses:
        200:
    post:
      parameters:
        - name: Direktiv-ActionID
          in: header
          type: string
          default: development
          description: |
            direktiv action id is an UUID. 
            For development it can be set to 'development'
        - name: Direktiv-TempDir
          in: header
          type: string
          default: /tmp
          description: |
            direktiv temp dir is the working directory for that request
            For development it can be set to e.g. '/tmp'
        - name: body
          in: body
          schema:
            type: object
            required: ["key", "project", "account"]
            properties:
              files:
                type: array
                items:
                  $ref: '#/definitions/direktivFile'
                description: File to create before running commands.
              key: 
                type: string
                description: Google Cloud JSON key base64 encoded
                example: L05ZXG4wTjJSZXQ2NGdYblc0c201a3hZV1R2MFFObnN2V2Vqc1==
              account:
                type: string
                description: Google Cloud service account name
                example: myserviceaccount@myproject.iam.gserviceaccount.com
              project:
                type: string
                description: Google Cloud project name
              commands:
                type: array
                description: Array of commands.
                items:
                  type: object
                  properties:
                    command:
                      type: string
                      description: Command to run
                      example: gcloud compute instances list --format=json
                    silent: 
                      type: boolean
                      description: If set to false the command will not print output to logs.
                      default: false
                    print: 
                      type: boolean
                      description: If set to false the command will not print the full command with arguments to logs.
                      default: true
                    continue: 
                      type: boolean
                      description: Stops excecution if command fails, otherwise proceeds with next command 
      # direktiv code generation is configured here
      x-direktiv-function: |-
        functions:
        - id: gcp
          image: gcr.io/direktiv/apps/gcp:1.0
          type: knative-workflow
      x-direktiv-examples:
        # ADD MORE EXAMPLES HERE
        - title: Basic
          content: |-
            - id: gcp
              type: action
              action:
                function: gcp
                secrets: ["gcpJSONKey", "gcpProject", "gcpAccount"]
                input: 
                  account: jq(.secrets.gcpAccount)
                  project: jq(.secrets.gcpProject)
                  key: jq(.secrets.gcpJSONKey | @base64 )
                  commands:
                  - command: gcloud compute instances list --format=json
      x-direktiv-secrets:
        - name: gcpJSONKey
          description: Google Cloud service account JSON keyfile, base64 encoded. The file should not have line wraps, e.g. 'base -w 0' on Linux.
        - name: gcpProject
          description: Google Cloud project
        - name: gcpAccount
          description: Google Cloud service account
      x-direktiv:  
        cmds:
        - action: exec
          exec: echo "gcp login and project configuration"
          print: false
          continue: false
        - action: exec
          exec: bash -c "echo {{ .Key }} | base64 -d > key.json"
          print: false
          silent: true
          continue: false
        - action: exec
          exec: gcloud config set project direktiv
          continue: false
          print: false
        - action: exec
          exec: gcloud auth activate-service-account direktiv-function-test@direktiv.iam.gserviceaccount.com --key-file=key.json
        - action: foreach
          loop: .Commands
          exec: '{{ .Item.Command }}'
          silent: '{{ .Item.Silent }}'
          print: '{{ .Item.Print }}'
          continue: '{{ .Item.Continue }}'
        output: |
          {
            "gcp": {{ index . 4 | toJson }}
          }
      x-direktiv-errors:
        io.direktiv.command.error: Command execution failed
        io.direktiv.output.error: Template error for output generation of the service
        io.direktiv.ri.error: Can not create information object from request
      responses:
        200:
          description: List of executed commands.
          examples:
            gcp:
            - result: 
                canIpForward: false
                confidentialInstanceConfig:
                  enableConfidentialCompute: false
                cpuPlatform: Unknown CPU Platform
              success: true
          schema:
            type: object
            properties:
              gcp:
                type: array
                items:
                  type: object
                  required:
                  - success
                  - result
                  properties:
                    success:
                      type: boolean
                    result:
                      additionalProperties: {}
        default:
          description: generic error response
          headers:
            Direktiv-ErrorCode:
              type: string
            Direktiv-ErrorMessage:
              type: string
          schema:
            $ref: "#/definitions/error"
definitions:
  direktivFile:
    type: object
    x-go-type:
      type: DirektivFile
      import:
        package: github.com/direktiv/apps/go/pkg/apps 
  error:
    type: object
    required:
      - errorCode
      - errorMessage
    properties:
      errorCode:
        type: string
      errorMessage:
        type: string
